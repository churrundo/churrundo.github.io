--- Folder Structure ---
styles.css
[Contact]
    ├── styles.css
    ├── [ContactForm]
        ├── styles.css
        ├── index.ts
        └── ContactForm.tsx
    ├── index.ts
    └── Contact.tsx
index.ts
Home.tsx
[Skills]
    ├── styles.css
    ├── index.ts
    ├── [SkillCard]
        ├── styles.css
        ├── SkillCard.tsx
        └── index.tsx
    └── Skills.tsx
[Header]
    ├── styles.css
    ├── index.ts
    └── Header.tsx
[Background]
    ├── styles.css
    ├── index.ts
    └── Background.tsx

--- File Contents ---

--- File: styles.css ---
.home-container {
  text-align: center;
  background-color: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%; 
}

.home-container h1 {
  color: #333;
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.home-container p {
  color: #555;
  font-size: 1.1rem;
}

header {
  min-height: calc(100vh - 37px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

section {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}


--- File: Contact\styles.css ---
/* Contact stylesheet */
.contact-section {
    padding: 50px 0;
    background-color: #f5f5f5;
    width: 100%;
    display: flex;
    flex-direction: column;
}

.contact-section-content {
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    align-items: flex-start;
}

.contact-links {
    flex: 0 0 45%; /* adjusted percentage */
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.contact-links a {
    color: #0077b5;
    text-decoration: none;
    font-size: 18px;
    transition: color 0.3s;
}

.contact-links a:hover {
    color: #005582;
}

.link-icon {
    width: 24px;  /* Adjust size as needed */
    height: 24px;
    margin-right: 10px;  /* Space between the icon and the text */
    vertical-align: middle;  /* Align icon with the text */
}


.contact-form-container {
    flex: 0 0 50%; /* adjusted percentage */
}


--- File: Contact\ContactForm\styles.css ---
/* styles.css */

.contact-form-container form {
    width: 100%;
    max-width: 480px;
    margin: 20px auto;
    padding: 20px;
    border: 1px solid #e1e1e1;
    border-radius: 8px;
    background-color: #f5f5f5;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding-right: 30px;
}

.contact-form-container label {
    display: block;
    margin-bottom: 10px;
    font-size: 16px;
    font-weight: 500;
}

.contact-form-container input[type="email"],
.contact-form-container textarea {
    display: block;
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #dcdcdc;
    border-radius: 4px;
    font-size: 16px;
    transition: border-color 0.3s;
    box-sizing: border-box;
}

.contact-form-container input[type="email"]:focus,
.contact-form-container textarea:focus {
    border-color: #007bff;
    outline: none;
}

.contact-form-container textarea {
    resize: vertical;
    min-height: 100px;
}

.contact-form-container ValidationError {
    display: block;
    margin-bottom: 15px;
    font-size: 14px;
    color: #d43f00;
}

.contact-form-container button {
    background-color: #007bff;
    color: #fff;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.contact-form-container button:hover {
    background-color: #0056b3;
}

.contact-form-container button:disabled {
    background-color: #b2d4ef;
    cursor: not-allowed;
}


--- File: Contact\ContactForm\index.ts ---
export { default } from "./ContactForm";


--- File: Contact\ContactForm\ContactForm.tsx ---
import { useForm, ValidationError } from "@formspree/react";
import "./styles.css";

function ContactForm() {
  const [state, handleSubmit] = useForm("xayglgon");
  if (state.succeeded) {
    return <p>We'll be in touch!</p>;
  }
  return (
    <div className="contact-form-container">
      <form onSubmit={handleSubmit}>
        <label htmlFor="email">Email Address</label>
        <input id="email" type="email" name="email" />
        <ValidationError prefix="Email" field="email" errors={state.errors} />
        <textarea id="message" name="message" />
        <ValidationError
          prefix="Message"
          field="message"
          errors={state.errors}
        />
        <button type="submit" disabled={state.submitting}>
          Submit
        </button>
      </form>
    </div>
  );
}

export default ContactForm;


--- File: Contact\index.ts ---
export {default} from "./Contact"

--- File: Contact\Contact.tsx ---
import React, { forwardRef } from "react";
import "./styles.css";
import BackToTopIcon from "../../../components/BackToTopIcon";
import ContactForm from "./ContactForm";

interface ContactProps {
  scrollTo: () => void;
}

const Contact = forwardRef<HTMLDivElement, ContactProps>((props, ref) => {
  return (
    <section ref={ref} className="contact-section">
      <div className="contact-section-content">
        <div className="contact-links">
          <a
            href="https://www.linkedin.com/in/juan-pablo-maurer-developer/"
            target="_blank"
            rel="noopener noreferrer"
          >
            <img
              src="/icons/linkedin-square.svg"
              alt="LinkedIn"
              className="link-icon"
            />
            LinkedIn
          </a>
          <a
            href="https://github.com/churrundo"
            target="_blank"
            rel="noopener noreferrer"
          >
            <img
              src="/icons/github-square.svg"
              alt="GitHub"
              className="link-icon"
            />
            GitHub
          </a>
          <a
            href="https://drive.google.com/file/d/1MqNI8ulqGVrhAxKVLgEP8tBmIZMRth5C/view?usp=sharing"
            target="_blank"
            rel="noopener noreferrer"
          >
            <img
              src="/icons/document.svg"
              alt="Download CV"
              className="link-icon"
            />
            Download CV
          </a>
        </div>

        <ContactForm />
      </div>

      <BackToTopIcon scrollTo={props.scrollTo} />
    </section>
  );
});

export default Contact;


--- File: index.ts ---
export {default} from "./Home";


--- File: Home.tsx ---
import React, {useRef} from "react";
import "./styles.css";

import Header from "./Header";
import Background from "./Background";
import Skills from "./Skills";
import Contact from "./Contact";

const Home: React.FC = () => {
  const backgroundRef = useRef<HTMLDivElement>(null);
  const skillsRef = useRef<HTMLDivElement>(null);
  const contactRef = useRef<HTMLDivElement>(null);

  const handleScrollToSection = (sectionRef: React.RefObject<HTMLDivElement>) => {
    sectionRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  return (
    <div className="home-container">
      <Header  scrollTo={() => handleScrollToSection(backgroundRef)}/>
      <Background ref={backgroundRef} scrollTo={() => handleScrollToSection(skillsRef)}/>
      <Skills ref={skillsRef} scrollTo={() => handleScrollToSection(contactRef)} />
      <Contact ref={contactRef} scrollTo={() => window.scrollTo({ top: 0, behavior: 'smooth' })} />
    </div>
  );
};

export default Home;


--- File: Skills\styles.css ---
.skills-section {
  display: flex;
  flex-direction: column;
  padding: 60px 30px;
  height: 100vh;
  background-color: #f9f9f9;
  text-align: center;
  align-items: center;
  justify-content: space-evenly;
}

.skills-header{
    margin: 0 auto;
    max-width: 500px;
}

.skills-section h2 {
  font-size: 2rem;
  color: #333;
}

.skills-list {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 60%;
}


--- File: Skills\index.ts ---
export {default} from "./Skills"

--- File: Skills\SkillCard\styles.css ---
.skill-card {
  width: 600px;
  height: 120px;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  border: 1px solid #ccc;
  border-radius: 5px;
  margin-bottom: 20px;
  transition: transform 0.3s;
}

.front,
.back {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  backface-visibility: hidden;
  transition: transform 0.3s;
  filter: brightness(100%);
}

.front {
  background-color: #f4f4f4;
  z-index: 2;
}

.back {
  transform: translateX(100%);
  background-color: #eee;
}

.back p {
  max-width: 80%;
  font-size: small;
  margin: 0 auto;
}

.skill-card.clicked {
    filter: brightness(95%);
}

.skill-card:hover .front, .skill-card.clicked .front {
  transform: translateX(-100%);
}

.skill-card:hover .back, .skill-card.clicked .back {
  transform: translateX(0);
}

h3 {
  font-size: 24px;
  margin-left: 25px;
}

.skill-card img {
  width: 50px;
  height: auto;
  margin-right: 25px;
}


--- File: Skills\SkillCard\SkillCard.tsx ---
import React, { useState } from "react";
import "./styles.css";

interface SkillCardProps {
  name: string;
  logo: string;
  description: string;
}

const SkillCard: React.FC<SkillCardProps> = ({ name, logo, description }) => {
    const [isClicked, setIsClicked] = useState(false);
    
    const toggleClicked = ()=> {
        setIsClicked(!isClicked)
    }

  return (
    <div className={`skill-card ${isClicked ? 'clicked' : ''}`} onClick={toggleClicked}>
      <div className="front">
        <h3>{name}</h3>
        <img src={logo} alt={`${name} logo`} />
      </div>
      <div className="back">
        <p>{description}</p>
      </div>
    </div>
  );
};

export default SkillCard;


--- File: Skills\SkillCard\index.tsx ---
export {default} from "./SkillCard"

--- File: Skills\Skills.tsx ---
import React, { forwardRef } from "react";
import "./styles.css";
import ScrollDownIcon from "../../../components/ScrollDownIcon";
import SkillCard from "./SkillCard";

interface SkillsProps {
  scrollTo: () => void;
}

const Skills = forwardRef<HTMLDivElement, SkillsProps>((props, ref) => {
  const skillsData = [
    {
      name: "React",
      logo: "/icons/MERN/react-svgrepo-com.svg",
      description:
        "Only until my final project did I get a general 'feel' for what React allows. A hierarchy of agents that keep track of and operate on the different parts of my frontend's behavior. Alternatives I'm curious about, Vue and Svelte.",
    },
    {
      name: "Node JS",
      logo: "/icons/MERN/node-js-svgrepo-com.svg",
      description:
        "JavaScript beyond the browser. I still feel somewhat like Danny-San painting fences and waxing cars in what I can do with it, but hey, the server's serving! Curious about Bun, which came out a week after I finished my bootcamp.",
    },
    {
      name: "Express JS",
      logo: "/icons/MERN/express-svgrepo-com.svg",
      description:
        "Part of my unfamiliarity with Node in general comes from the fact that I've only ever used it within the the single framework of Express. It's been reliable for building APIs, but I've got my eye on exploring Next.js for its integration with React by design.",
    },
    {
      name: "Mongo DB",
      logo: "/icons/MERN/mongo-svgrepo-com.svg",
      description:
        "I learned a valuable lesson about databases in general during my final project: the limit to their usefulness is the quality of your data structure. Still, I'm curious about what's the deal with SQL",
    },
  ];

  return (
    <section ref={ref} className="skills-section">
      <div className="skills-header">
        <h2>My Core Skills</h2>
        <p>
          By no means an expert in any of these, but these are the technologies
          I am trained in (Hover or click any for a summary of my understanding
          of it).
        </p>
      </div>
      <div className="skills-list">
        {skillsData.map((skill, index) => (
          <SkillCard
            key={index}
            name={skill.name}
            logo={skill.logo}
            description={skill.description}
          />
        ))}
      </div>
      <ScrollDownIcon scrollTo={props.scrollTo} />
    </section>
  );
});

export default Skills;


--- File: Header\styles.css ---
/* src/components/Header/styles.css */

.header-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #f9f9f9;
}

.hero {
  margin-top: -80px;
}

.profile-image {
  width: 200px;
  height: 240px;
  border-radius: 15px;
  object-fit: cover;
  object-position: center top;
  margin-bottom: 1rem;
}

.header-name {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

.header-tagline {
  font-size: 1.4rem;
  color: #777;
  margin-bottom: 1rem;
}

--- File: Header\index.ts ---
export {default} from "./Header"

--- File: Header\Header.tsx ---
import React from "react";
import "./styles.css";
import ScrollDownIcon from "../../../components/ScrollDownIcon";

interface HeaderProps {
  scrollTo: () => void;
}

const Header: React.FC<HeaderProps> = ({ scrollTo }) => {
  return (
    <header className="header-container">
      <div className="hero">
        <img src="/profile-pic.jpg" alt="Profile" className="profile-image" />
        <h1 className="header-name">Juan Pablo Maurer</h1>
        <p className="header-tagline">
          Full-Stack Web Developer | Intuition Driver | Perpetually Curious
        </p>
      </div>
      <ScrollDownIcon scrollTo={scrollTo} />
    </header>
  );
};

export default Header;


--- File: Background\styles.css ---
.background-section {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    padding: 2rem;
    background-color: #f5f5f5;
}

.background-image-container {
    flex: 1;
    padding: 50px;
}

#background-image {
    max-width: 75%;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); 
}

.background-content {
    flex: 1;
    padding-left: 1rem;
    max-width: 60%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.background-content p, .background-content h3 {    
    text-align: left;
}

.background-greeting {
    max-width: 80%;
}

.background-greeting p, .background-greeting h2{
    text-align: center;  
    font-weight: 600;
}

.background-journey, .background-blend, .background-life {
    text-align: left;
}


--- File: Background\index.ts ---
export {default} from "./Background";


--- File: Background\Background.tsx ---
import React, { forwardRef } from "react";
import "./styles.css";
import ScrollDownIcon from "../../../components/ScrollDownIcon";

interface BackgroundProps {
  scrollTo: () => void;
}

const Background = forwardRef<HTMLDivElement, BackgroundProps>((props, ref) => {
  return (
    <section ref={ref} className="background-section">
      <div className="background-image-container">
        <img
          src="./IMG_20230705_230300_255.jpg"
          alt="It's me smiling and waving"
          id="background-image"
        />
      </div>

      <div className="background-content">
        <div className="background-greeting">
          <h2>Hi There!</h2>
          <p>
            I'm Juan Pablo, a 30-year-old from Mexico with a background in
            MERN-stack Web Development and Psychology.
          </p>
        </div>
        <div className="background-journey">
          <h3>My Journey</h3>
          <p>
            After several years of struggling with addiction, I decided to
            reboot my life in 2017 by getting into rehab. Right after that, I
            studied Psychology, which allowed me to consolidate my recovery,
            develop my emotional intelligence, and most importantly discover I
            had undiagnosed ADHD. Finally, with some good hard work and some
            more vocational recalibration, I decided to do a Web Development
            bootcamp and move to Berlin.
          </p>
        </div>
        <div className="background-blend">
          <h3>The Blend</h3>
          <p>
            Having experienced life's lows and the transformative power of
            self-awareness and determination, I bring empathy and a user-centric
            approach to my projects. I understand the importance of
            accessibility, intuitive design, and the overall human experience in
            digital spaces. All of this, with a dash of methylphenidate, gets
            you a driven, curious, gentle, handsome, and witty addition to your
            team.
          </p>
        </div>
        <div className="background-life">
          <h3>Life Beyond Code</h3>
          <p>
            When I'm not optimizing my LinkedIn with ChatGPT or looking at
            YouTube tutorials for obscure technologies I don't even know the use
            cases of, I am usually reading one of my preferred bloggers, eating
            with my gf at the next restaurant on our to-try list, scratching my
            dog's belly, or curating memes and tiktoks.
          </p>
        </div>
      </div>
      <ScrollDownIcon scrollTo={props.scrollTo} />
    </section>
  );
});

export default Background;

